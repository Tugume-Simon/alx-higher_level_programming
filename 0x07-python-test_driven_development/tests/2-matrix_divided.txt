The ``2-matrix_divided`` module
===============================

Using ``matrix_divided``
------------------------

This file tests a module 2-matrix_divided that divides a matrix
(list of lists with each element being an integer or float) by a
scalar (integer/float)
Imports & parent-directory
	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Tests
	>>> matrix_divided([[1, 4, 5], [3, 5, 6], [3, 4, 6]], 2)
	[[0.5, 2.0, 2.5], [1.5, 2.5, 3.0], [1.5, 2.0, 3.0]]

	>>> matrix_divided([3, 5, 6], 3)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided("ste", 3)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided((3, 5, 6), 3)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(98, 3)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided(3.56, 3)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats
	
	>>> matrix_divided([[3, 4, 5], [2, 1], [2, 4, 5]], 3)
	Traceback (most recent call last):
	...
    	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[3, 4, 5], [2, 1, 3], [2, 4, 5]], "3")
	Traceback (most recent call last):
	...
    	TypeError: div must be a number

	>>> matrix_divided([[3, 4, 5], [2, 1, 3], [2, 4, 5]], 0)
	Traceback (most recent call last):
	...
    	ZeroDivisionError: division by zero

	>>> matrix_divided([[3, 4, '5'], [2, 1, 3], [2, 4, 5]], 2)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[], [], []], 1)
	Traceback (most recent call last):
	...
    	TypeError: matrix must be a matrix (list of lists) of integers/floats
